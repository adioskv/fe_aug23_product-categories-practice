{"version":3,"sources":["api/users.js","api/categories.js","components/Users/Users.jsx","components/InputField/InputField.jsx","components/Category/Category.jsx","components/Product/Product.jsx","components/Products/Products.jsx","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","Users","users","currentUser","setCurrentUser","className","onClick","href","cn","map","user","InputField","query","setQuery","onChange","event","target","value","type","placeholder","Category","categoriesFromServer","currentCategories","setCurrentCategories","length","category","includes","filter","categ","Product","product","productId","productName","productCategory","productUser","productUserSex","ProductSorts","Products","products","sortType","setSortType","sort","categoryId","find","usersFromServer","human","App","useState","visibleProducts","productsArray","array","Object","keys","ID","a","b","localeCompare","User","sortProducts","goods","categories","goodsArray","good","toLowerCase","filterProducts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0054c9f6.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import cn from 'classnames';\n\nexport const Users = ({ users, currentUser, setCurrentUser }) => (\n  <p className=\"panel-tabs has-text-weight-bold\">\n    <a\n      onClick={() => setCurrentUser('')}\n      data-cy=\"FilterAllUsers\"\n      href=\"#/\"\n      className={\n        cn(\n          { 'is-active': currentUser === '' },\n        )\n      }\n    >\n      All\n    </a>\n\n    {users.map(user => (\n      <a\n        key={user.id}\n        onClick={() => setCurrentUser(user.name)}\n        data-cy=\"FilterUser\"\n        href=\"#/\"\n        className={\n          cn(\n            { 'is-active': user.name === currentUser },\n          )\n        }\n      >\n        {user.name}\n      </a>\n    ))}\n  </p>\n);\n","export const InputField = ({ query, setQuery }) => (\n  <div className=\"panel-block\">\n    <p className=\"control has-icons-left has-icons-right\">\n      <input\n        onChange={event => setQuery(event.target.value)}\n        data-cy=\"SearchField\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search\"\n        value={query}\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-search\" aria-hidden=\"true\" />\n      </span>\n      {query\n        && (\n          <span className=\"icon is-right\">\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => setQuery('')}\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          </span>\n        )}\n    </p>\n  </div>\n);\n","import cn from 'classnames';\n\nexport const Category = ({\n  categoriesFromServer,\n  currentCategories,\n  setCurrentCategories,\n}) => (\n  <div className=\"panel-block is-flex-wrap-wrap\">\n    <a\n      onClick={() => setCurrentCategories([])}\n      href=\"#/\"\n      data-cy=\"AllCategories\"\n      className={cn(\n        'button',\n        'is-success',\n        'mr-6',\n        { 'is-outlined': currentCategories.length !== 0 },\n      )\n      }\n    >\n      All\n    </a>\n\n    {categoriesFromServer.map(category => (\n      <a\n        key={category.id}\n        onClick={() => setCurrentCategories(\n          currentCategories.includes(category.title)\n            ? currentCategories.filter(categ => categ !== category.title)\n            : [\n              ...currentCategories,\n              category.title,\n            ],\n        )}\n        data-cy=\"Category\"\n        href=\"#/\"\n        className={cn(\n          'button',\n          'mr-2',\n          'my-1',\n          {\n            'is-info': currentCategories.includes(category.title),\n          },\n        )}\n      >\n        {category.title}\n      </a>\n    ))}\n  </div>\n);\n","import cn from 'classnames';\n\nexport const Product = ({ product }) => {\n  const {\n    productId = product.product.id,\n    productName = product.product.name,\n    productCategory = `${product.category.icon} - ${product.category.title}`,\n    productUser = product.user.name,\n    productUserSex = product.user.sex,\n  } = product;\n\n  return (\n    <tr data-cy=\"Product\">\n      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n        {productId}\n      </td>\n\n      <td data-cy=\"ProductName\">{productName}</td>\n      <td data-cy=\"ProductCategory\">{productCategory}</td>\n\n      <td\n        data-cy=\"ProductUser\"\n        className={cn({\n          'has-text-danger': productUserSex === 'f',\n          'has-text-link': productUserSex === 'm',\n        })}\n      >\n        {productUser}\n      </td>\n    </tr>\n  );\n};\n","import cn from 'classnames';\nimport { Product } from '../Product/Product';\n\nconst ProductSorts = [\n  'ID',\n  'Product',\n  'Category',\n  'User',\n];\n\nexport const Products = ({ products, sortType, setSortType }) => (\n  <div className=\"box table-container\">\n    {products.length === 0\n      ? (\n        <p data-cy=\"NoMatchingMessage\">\n          No products matching selected criteria\n        </p>\n      ) : (\n        <table\n          data-cy=\"ProductTable\"\n          className=\"table is-striped is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              {ProductSorts.map(sort => (\n                <th key={sort}>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    {sort}\n\n                    <a\n                      href=\"#/\"\n                      onClick={() => setSortType(\n                        sortType[sort] === 'DESC'\n                          ? {}\n                          : {\n                            [sort]: sortType[sort] ? 'DESC' : 'ASC',\n                          },\n                      )}\n                    >\n\n                      <span className=\"icon\">\n                        <i\n                          data-cy=\"SortIcon\"\n                          className={cn(\n                            'fas',\n                            {\n                              'fa-sort': !sortType[sort],\n                              'fa-sort-down': sortType[sort] === 'DESC',\n                              'fa-sort-up': sortType[sort] === 'ASC',\n                            },\n                          )}\n                        />\n                      </span>\n                    </a>\n                  </span>\n                </th>\n              ))}\n            </tr>\n          </thead>\n\n          <tbody>\n            {products.map(product => (\n              <Product\n                product={product}\n                key={product.product.id}\n              />\n            ))}\n          </tbody>\n        </table>\n      )\n    }\n  </div>\n);\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\nimport { Users } from './components/Users/Users';\nimport { InputField } from './components/InputField/InputField';\nimport { Category } from './components/Category/Category';\nimport { Products } from './components/Products/Products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(categ => product.categoryId === categ.id);\n\n  const user = usersFromServer\n    .find(human => category.ownerId === human.id);\n\n  return {\n    product,\n    category,\n    user,\n  };\n});\n\nconst filterProducts = (goods, query, categories, user) => {\n  let goodsArray = [...goods];\n\n  if (query) {\n    goodsArray = goodsArray.filter(good => good.product.name\n      .toLowerCase().includes(query.toLowerCase()));\n  }\n\n  if (categories.length !== 0) {\n    goodsArray = goodsArray\n      .filter(good => categories.includes(good.category.title));\n  }\n\n  if (user) {\n    goodsArray = goodsArray.filter(good => good.user.name === user);\n  }\n\n  return goodsArray;\n};\n\nconst sortProducts = (productsArray, sortType) => {\n  const array = [...productsArray];\n\n  if (Object.keys(sortType).length === 0) {\n    return array;\n  }\n\n  if (sortType.ID) {\n    if (sortType.ID === 'ASC') {\n      array.sort((a, b) => a.product.id - b.product.id);\n    } else {\n      array.sort((a, b) => b.product.id - a.product.id);\n    }\n  }\n\n  if (sortType.Product) {\n    if (sortType.Product === 'ASC') {\n      array.sort((a, b) => a.product.name.localeCompare(b.product.name));\n    } else {\n      array.sort((a, b) => b.product.name.localeCompare(a.product.name));\n    }\n  }\n\n  if (sortType.Category) {\n    if (sortType.Category === 'ASC') {\n      array.sort((a, b) => a.category.title.localeCompare(b.category.title));\n    } else {\n      array.sort((a, b) => b.category.title.localeCompare(a.category.title));\n    }\n  }\n\n  if (sortType.User) {\n    if (sortType.User === 'ASC') {\n      array.sort((a, b) => a.user.name.localeCompare(b.user.name));\n    } else {\n      array.sort((a, b) => b.user.name.localeCompare(a.user.name));\n    }\n  }\n\n  return array;\n};\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n  const [currentCategories, setCurrentCategories] = useState([]);\n  const [currentUser, setCurrentUser] = useState('');\n\n  const [sortType, setSortType] = useState({});\n\n  const resetFilters = () => {\n    setCurrentUser('');\n    setQuery('');\n    setCurrentCategories([]);\n  };\n\n  const visibleProducts = sortProducts(\n    filterProducts(\n      products,\n      query,\n      currentCategories,\n      currentUser,\n    ),\n\n    sortType,\n  );\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n            <Users\n              users={usersFromServer}\n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n            />\n\n            <InputField query={query} setQuery={setQuery} />\n\n            <Category\n              categoriesFromServer={categoriesFromServer}\n              currentCategories={currentCategories}\n              setCurrentCategories={setCurrentCategories}\n            />\n\n            <div className=\"panel-block\">\n              <a\n                onClick={() => resetFilters()}\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n        {/* products */}\n        <Products\n          products={visibleProducts}\n          sortType={sortType}\n          setSortType={setSortType}\n        />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}